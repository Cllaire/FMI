SELECT j.job_title,j.min_salary,j.max_salary,
NVL(min(e.commission_pct),0) AS "COM MIN",
NVL(max(e.commission_pct),0) AS "COM Max",
COUNT(DISTINCT e.commission_pct) AS "NR VAL DISTINCTE"
FROM employees e, jobs j
WHERE e.job_id(+)=j.job_id
GROUP BY j.job_title,j.min_salary,j.max_salary;

SELECT department_id, TO_CHAR(hire_date, 'yyyy'), SUM(salary)
FROM employees
WHERE department_id < 50
GROUP BY ROLLUP(department_id, TO_CHAR(hire_date, 'yyyy'));

-- Ex. ROLLUP
SELECT L.CITY, E.DEPARTMENT_ID, E.JOB_ID, COUNT(E.EMPLOYEE_ID)
FROM EMPLOYEES E, LOCATIONS L, DEPARTMENTS D
WHERE E.DEPARTMENT_ID= D.DEPARTMENT_ID AND D.LOCATION_ID=L.LOCATION_ID 
GROUP BY ROLLUP(L.CITY, E.DEPARTMENT_ID,E.JOB_ID);

-- Ex. CUBE
SELECT L.CITY, E.DEPARTMENT_ID, E.JOB_ID, COUNT(E.EMPLOYEE_ID)
FROM EMPLOYEES E, LOCATIONS L, DEPARTMENTS D
WHERE E.DEPARTMENT_ID= D.DEPARTMENT_ID AND D.LOCATION_ID=L.LOCATION_ID 
GROUP BY CUBE (L.CITY, E.DEPARTMENT_ID,E.JOB_ID)
ORDER BY L.CITY NULLS LAST;

--Ex. GROUPING
SELECT department_name, job_title, AVG(salary) medie,
DECODE(GROUPING(department_name), 0, 'Dep') dep,
DECODE(GROUPING(job_title), 0, 'Job') job
FROM employees e, departments d, jobs j
WHERE e.department_id = d.department_id
AND e.job_id = j.job_id
GROUP BY CUBE(department_name, job_title);

--Ex. 3
SELECT D.DEPARTMENT_NAME, J.JOB_TITLE, E.MANAGER_ID, MAX(E.SALARY), SUM(E.SALARY)
FROM EMPLOYEES E, DEPARTMENTS D, JOBS J
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID AND E.JOB_ID = J.JOB_ID
GROUP BY GROUPING SETS((D.DEPARTMENT_NAME,J.JOB_TITLE),(J.JOB_TITLE,E.MANAGER_ID),()); 

SELECT MAX(SALARY)
FROM EMPLOYEES
HAVING MAX(SALARY) > 15000;

SELECT DEPARTMENT_ID,MAX(SALARY)
FROM EMPLOYEES 
GROUP BY DEPARTMENT_ID;

SELECT DEPARTMENT_ID, MAX(SALARY)
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID
HAVING MAX(SALARY) > 12000;

-- 6
SELECT FIRST_NAME, LAST_NAME, SALARY
FROM EMPLOYEES 
WHERE SALARY > (SELECT MAX(AVG(salary))
                FROM employees
                GROUP BY DEPARTMENT_ID);
                
-- 6 ALTERNATIV
SELECT LAST_NAME, SALARY
FROM EMPLOYEES
WHERE SALARY > ALL (SELECT AVG(SALARY)
                    FROM EMPLOYEES
                    GROUP BY DEPARTMENT_ID);
                    
-- 7
SELECT LAST_NAME, SALARY, DEPARTMENT_ID
FROM EMPLOYEES E
WHERE SALARY = (SELECT MIN(salary)
                FROM employees
                WHERE department_id = e.department_id);

-- 7 - SOLUTIA 3
SELECT E.LAST_NAME, E.SALARY, E.DEPARTMENT_ID
FROM EMPLOYEES E, (SELECT MIN(SALARY) AS SALARIU_MIN, DEPARTMENT_ID
                   FROM EMPLOYEES
                   GROUP BY DEPARTMENT_ID) SM
WHERE E.DEPARTMENT_ID = SM.DEPARTMENT_ID AND E.SALARY = SM.SALARIU_MIN;

-- 8 
SELECT LAST_NAME, DEPARTMENT_NAME
FROM EMPLOYEES E, DEPARTMENTS D
WHERE E.DEPARTMENT_ID=D.DEPARTMENT_ID AND HIRE_DATE IN (SELECT MIN(HIRE_DATE)
                   FROM EMPLOYEES
                   WHERE DEPARTMENT_ID = E.DEPARTMENT_ID)
ORDER BY DEPARTMENT_NAME ASC;

-- 9
SELECT E.LAST_NAME
FROM EMPLOYEES E
WHERE EXISTS (SELECT EMPLOYEE_ID
              FROM EMPLOYEES 
              WHERE E.DEPARTMENT_ID = DEPARTMENT_ID 
              AND SALARY = (SELECT MAX(SALARY)
                              FROM EMPLOYEES
                              WHERE DEPARTMENT_ID=30));
                        
-- 10 SOLUTIA 2
SELECT LAST_NAME, SALARY 
FROM (SELECT LAST_NAME, SALARY FROM EMPLOYEES ORDER BY SALARY DESC)
WHERE ROWNUM < 4;

-- 11 
SELECT E.LAST_NAME, E.FIRST_NAME, E.EMPLOYEE_ID
FROM EMPLOYEES E 
WHERE (SELECT COUNT(*)
       FROM EMPLOYEES
       WHERE E.EMPLOYEE_ID = MANAGER_ID) >= 2;
       
-- 12
SELECT L.CITY
FROM LOCATIONS L 
WHERE EXISTS (SELECT D.DEPARTMENT_ID
              FROM DEPARTMENTS D
              WHERE L.LOCATION_ID = D.LOCATION_ID);
              
-- 13
SELECT DEPARTMENT_ID, DEPARTMENT_NAME
FROM DEPARTMENTS D 
WHERE NOT EXISTS (SELECT 'x' 
                  FROM EMPLOYEES
                  WHERE DEPARTMENT_ID = D.DEPARTMENT_ID);
      
-- 14 A
SELECT employee_id, last_name, hire_date, salary, manager_id
FROM employees
WHERE manager_id = (SELECT employee_id
                    FROM employees
                    WHERE LOWER(last_name)='de haan');
                    
-- 14 B
SELECT employee_id, last_name, hire_date, salary, manager_id
FROM employees
START WITH employee_id=( SELECT employee_id
FROM employees
WHERE LOWER(last_name)='de haan')
CONNECT BY manager_id = PRIOR employee_id;