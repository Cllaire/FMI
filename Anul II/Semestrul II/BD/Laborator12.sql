-- Laborator 7(Continuare)

-- 17
UPDATE EMP_ACRO
SET (SALARY,COMMISSION_PCT)=(SELECT E.SALARY,E.COMMISSION_PCT -- SALARIU, COMISION - MANAGER
                             FROM EMP_ACRO E 
                             WHERE E.EMPLOYEE_ID=(SELECT EMPLOYEE_ID -- ID MANAGER
                                                  FROM EMP_ACRO 
                                                  WHERE EMPLOYEE_ID=(SELECT MANAGER_ID --ANGAJATUL CU MANAGER_ID 
                                                                     FROM EMP_ACRO
                                                                     WHERE SALARY=(SELECT MIN(SALARY) --nu putem face clauza min in where 
                                                                     FROM EMP_ACRO))))
WHERE SALARY=(SELECT MIN(SALARY) FROM EMP_ACRO);

UPDATE EMP_ACRO X
SET (SALARY,COMMISSION_PCT)=(SELECT E.SALARY,E.COMMISSION_PCT FROM EMP_ACRO E WHERE E.EMPLOYEE_ID=X.MANAGER_ID)
WHERE SALARY=(SELECT MIN(SALARY) FROM EMPLOYEES);

-- 18
UPDATE EMP_ACRO
SET EMAIL = CONCAT(SUBSTR(LAST_NAME,1,1), NVL(FIRST_NAME, '.')) 
WHERE (SALARY, DEPARTMENT_ID) IN (SELECT MAX(SALARY), DEPARTMENT_ID
                                  FROM EMP_ACRO
                                  GROUP BY DEPARTMENT_ID);

ROLLBACK;

-- 19
UPDATE EMP_ACRO
SET (SALARY) = (SELECT AVG(SALARY) FROM EMP_ACRO)
WHERE (HIRE_DATE, DEPARTMENT_ID) IN (SELECT MIN(HIRE_DATE), DEPARTMENT_ID
                                    FROM EMP_ACRO
                                    GROUP BY DEPARTMENT_ID);
                                    
-- 20
UPDATE EMP_ACRO
SET (JOB_ID, DEPARTMENT_ID) = (SELECT JOB_ID, DEPARTMENT_ID
                               FROM EMP_ACRO
                               WHERE EMPLOYEE_ID = 205)
WHERE EMPLOYEE_ID = 114;

-- 21
ACCEPT COD_ACTUALIZAT;
SELECT *
FROM DEPT_ACRO
WHERE DEPARTMENT_ID = &&COD_ACTUALIZAT;

ACCEPT NUME_ACTUALIZAT;
UPDATE DEPT_ACRO
SET DEPARTMENT_NAME = &NUME_ACTUALIZAT
WHERE DEPARTMENT_ID = &COD_ACTUALIZAT;

ACCEPT MANAGER_ACTUALIZAT;
UPDATE DEPT_ACRO
SET MANAGER_ID = &MANAGER_ACTUALIZAT
WHERE DEPARTMENT_ID = &COD_ACTUALIZAT;

ACCEPT LOCATIE_ACTUALIZAT;
UPDATE DEPT_ACRO
SET LOCATION_ID = &LOCATIE_ACTUALIZAT
WHERE DEPARTMENT_ID = &COD_ACTUALIZAT;

SELECT *
FROM DEPT_ACRO
WHERE DEPARTMENT_ID = &COD_ACTUALIZAT;

-- 22 
TRUNCATE TABLE DEPT_ACRO;
-- An attempt was made to truncate a table with unique or
           --primary keys referenced by foreign keys enabled in another table.

-- 23 
DELETE FROM EMP_ACRO
WHERE COMMISSION_PCT IS NULL;

ROLLBACK;

-- 24
DELETE FROM DEPT_ACRO
WHERE DEPARTMENT_ID IN (SELECT DEPARTMENT_ID 
                       FROM DEPT_ACRO
                       MINUS
                       SELECT DISTINCT DEPARTMENT_ID
                       FROM EMP_ACRO);
                       
-- 25 
ACCEPT COD_ANGAJAT;
DELETE FROM EMP_ACRO
WHERE EMPLOYEE_ID = &COD_ANGAJAT;

ROLLBACK;

-- 26
ACCEPT COD;
ACCEPT NUME;
ACCEPT PRENUME;
ACCEPT SALARIU;
INSERT INTO EMP_ACRO(EMPLOYEE_ID, LAST_NAME, FIRST_NAME, SALARY, EMAIL,HIRE_DATE, JOB_ID)
VALUES (&COD, &NUME  , &PRENUME ,  &SALARIU, CONCAT( SUBSTR(&NUME,1) , SUBSTR(&PRENUME,-7) ), SYSDATE, 10000);

-- 27 
SAVEPOINT Var1;

-- 28
DELETE FROM EMP_ACRO; -- nu se mai poate face rollback 
                      -- face commit automat;
-- 29 
ROLLBACK TO Var1;

-- 30
SELECT *
FROM EMP_ACRO;

COMMIT; 



SELECT *
FROM EMP_ACRO;

SELECT *
FROM DEPT_ACRO;